% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predictMC.R
\name{predictMC}
\alias{predictMC}
\title{Monte Carlo Prediction}
\usage{
predictMC(envir, policy, n.episodes = 100, discount.factor = 1,
  method = c("first-visit, every-visit"), alpha = 0.1)
}
\arguments{
\item{envir}{an R6 class: the reinforcement learning environment created by \link{makeEnvironment}.}

\item{policy}{numeric matrix: a policy specified as a probability matrix (states x actions)}

\item{n.episodes}{scalar integer: the number of episodes}

\item{discount.factor}{scalar numeric, discounting future rewards}

\item{method}{scalar character: first-visit or every-visit method}

\item{alpha}{scalar numeric between 0 and 1: weighting factor in the
incremental mean update. Useful in non-stationary environments, giving high
value to the last observed returns.}
}
\description{
Predict state value function v with Monte Carlo methods. The state value
function is estimated from mean returns of episodes.
}
\details{
Only works for episodic tasks (i.e. there must be at least one terminal
state)! An incremental mean update is implemented. Use a high alpha value to
give recent episodes a higher weight if you have a non-stationary environment
. First-visit Monte Carlo estimates the return following the first visit to
a state, every-visit Monte Carlo following all visits in the episode. Returns
are averaged over multiple episodes.
}
\examples{
set.seed(26)
grid = gridworld$new()
Gridworld1 = makeEnvironment(transition.array = grid$transition.array, 
  reward.matrix = grid$reward.matrix, terminal.states = grid$terminal.states,
  initial.state = grid$initial.state)
  
# Define random policy
random.policy = matrix(1 / Gridworld1$n.actions, nrow = Gridworld1$n.states, 
  ncol = Gridworld1$n.actions)
  
# Estimate state value function with Monte Carlo prediction
v = predictMC(Gridworld1, random.policy, n.episodes = 100, method = "first-visit", alpha = NULL)
v = predictMC(Gridworld1, random.policy, n.episodes = 100, method = "every-visit", alpha = NULL)
}
\seealso{
\link{td}
}
