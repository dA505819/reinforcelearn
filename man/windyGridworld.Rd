% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/windyGridworld.R
\docType{class}
\name{windyGridworld}
\alias{windyGridworld}
\title{Windy Gridworld environment}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
#grid = windyGridworld$new()
# A step method returns the next.state and reward given a state and action.
}
\description{
Simple windy gridworld for reinforcement learning. Actions include going
left, right, up and down. In each column the wind pushes you up a specific
number of steps.
}
\section{Methods}{
 \describe{ \item{\code{windyGridworld$new(shape,
  terminal.states)}}{Creates a new \code{windyGridworld} with a specific
\code{shape}, which is a length-two integer, e.g. \code{c(4, 4)}.
\code{terminal.states} is an integer vector of the terminal states in the
gridworld. Default is \code{c(1, 16)}} \item{\code{windyGridworld$step(state,
  action)}}{Takes a step in the gridworld given a state and an action,
returns the next state and reward.}
\item{\code{windyGridworld$setEpisodeOverFalse()}}{Resets the
\code{episode.over} flag of the gridworld class. Useful when starting a new
episode.} }

Possible actions include going left, right, down or up. If an action would
take you off the grid, you remain in the previous state. For each step you
get a reward of -1, until you reach into a terminal state.
}

\examples{
set.seed(27)
grid = windyGridworld$new()

# initial state = 3
states = 3
rewards = numeric(0)
sampled.actions = character(0)
episode.over = FALSE
i = 1

while(grid$episode.over == FALSE) {
  sampled.actions = append(sampled.actions, sample(grid$actions, size = 1))
  grid$step(states[i], sampled.actions[i])
  states = append(states, grid$next.state)
  rewards = append(rewards, grid$reward)
  episode.over = grid$episode.over
  i = i + 1
}

print(rewards)
print(states)
}
\references{
Windy gridworld example from Sutton & Barto, chapter 6
}
\keyword{datasets}
